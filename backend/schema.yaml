openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/alerts/:
    get:
      operationId: alerts_list
      tags:
      - alerts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertList'
          description: ''
    post:
      operationId: alerts_create
      tags:
      - alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Alert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Alert'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
  /api/alerts/{id}/:
    get:
      operationId: alerts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - alerts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    put:
      operationId: alerts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Alert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Alert'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    patch:
      operationId: alerts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlert'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
          description: ''
    delete:
      operationId: alerts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this alert.
        required: true
      tags:
      - alerts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/me/:
    get:
      operationId: auth_me_retrieve
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_me_update
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/refresh/:
    post:
      operationId: auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/register/:
    get:
      operationId: auth_register_list
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: auth_register_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/auth/register/{id}/:
    get:
      operationId: auth_register_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_register_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_register_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_register_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/logs/:
    get:
      operationId: logs_list
      tags:
      - logs
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IAActionLog'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Alert:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          oneOf:
          - type: object
            properties:
              type:
                type: string
                enum:
                - Point
              coordinates:
                type: array
                items:
                  type: number
                  format: float
                example:
                - 12.9721
                - 77.5933
                minItems: 2
                maxItems: 3
          - type: object
            properties:
              type:
                type: string
                enum:
                - LineString
              coordinates:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 2
          - type: object
            properties:
              type:
                type: string
                enum:
                - Polygon
              coordinates:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                    example:
                    - 12.9721
                    - 77.5933
                    minItems: 2
                    maxItems: 3
                  example:
                  - - 22.4707
                    - 70.0577
                  - - 12.9721
                    - 77.5933
                  minItems: 4
                example:
                - - - 0.0
                    - 0.0
                  - - 0.0
                    - 50.0
                  - - 50.0
                    - 50.0
                  - - 50.0
                    - 0.0
                  - - 0.0
                    - 0.0
        properties:
          type: object
          properties:
            alert_type:
              enum:
              - accident
              - construction
              - flood
              type: string
              description: |-
                * `accident` - Accident
                * `construction` - Construction
                * `flood` - Flood
            description:
              type: string
            created_at:
              type: string
              format: date-time
              readOnly: true
    AlertList:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureCollectionEnum'
        features:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
    GisFeatureCollectionEnum:
      type: string
      enum:
      - FeatureCollection
    GisFeatureEnum:
      type: string
      enum:
      - Feature
    IAActionLog:
      type: object
      properties:
        type:
          type: string
        input: {}
        result: {}
        timestamp:
          type: string
          format: date-time
      required:
      - input
      - result
      - timestamp
      - type
    PatchedAlert:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GisFeatureEnum'
        id:
          type: integer
          readOnly: true
        geometry:
          oneOf:
          - type: object
            properties:
              type:
                type: string
                enum:
                - Point
              coordinates:
                type: array
                items:
                  type: number
                  format: float
                example:
                - 12.9721
                - 77.5933
                minItems: 2
                maxItems: 3
          - type: object
            properties:
              type:
                type: string
                enum:
                - LineString
              coordinates:
                type: array
                items:
                  type: array
                  items:
                    type: number
                    format: float
                  example:
                  - 12.9721
                  - 77.5933
                  minItems: 2
                  maxItems: 3
                example:
                - - 22.4707
                  - 70.0577
                - - 12.9721
                  - 77.5933
                minItems: 2
          - type: object
            properties:
              type:
                type: string
                enum:
                - Polygon
              coordinates:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: number
                      format: float
                    example:
                    - 12.9721
                    - 77.5933
                    minItems: 2
                    maxItems: 3
                  example:
                  - - 22.4707
                    - 70.0577
                  - - 12.9721
                    - 77.5933
                  minItems: 4
                example:
                - - - 0.0
                    - 0.0
                  - - 0.0
                    - 50.0
                  - - 50.0
                    - 50.0
                  - - 50.0
                    - 0.0
                  - - 0.0
                    - 0.0
        properties:
          type: object
          properties:
            alert_type:
              enum:
              - accident
              - construction
              - flood
              type: string
              description: |-
                * `accident` - Accident
                * `construction` - Construction
                * `flood` - Flood
            description:
              type: string
            created_at:
              type: string
              format: date-time
              readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
